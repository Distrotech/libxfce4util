INCLUDES =								\
	-DDEFAULT_XDG_CACHE_HOME=\"~/.cache\"				\
	-DDEFAULT_XDG_DATA_HOME=\"~/.local/share\"			\
	-DDEFAULT_XDG_CONFIG_HOME=\"~/.config\"				\
	-DDEFAULT_XDG_DATA_DIRS=\"$(datadir):/usr/local/share:/usr/share\" \
	-DDEFAULT_XDG_CONFIG_DIRS=\"$(sysconfdir)/xdg:$(sysconfdir)/xfce4:/etc/xdg\" \
	-DDATADIR=\"$(datadir)\"					\
	-DSYSCONFDIR=\"$(sysconfdir)\"					\
	-DG_LOG_DOMAIN=\"libxfce4util\"					\
	-DKIOSKDIR=\"$(sysconfdir)/xdg/xfce4/kiosk\"			\
	-DKIOSKDEF=\"ALL\"

lib_LTLIBRARIES = libxfce4util.la

util_headers = xfce-resource.h

util_built_headers = util-enum-types.h
util_built_sources = $(util_built_headers) util-enum-types.c

libxfce4utilincludedir = $(includedir)/xfce4/libxfce4util

libxfce4utilinclude_HEADERS =						\
	debug.h								\
	i18n.h								\
	libxfce4util.h							\
	libxfce4util-config.h						\
	utf8.h								\
	util.h								\
	xfce-desktopentry.h						\
	xfce-fileutils.h						\
	xfce-generics.h							\
	xfce-kiosk.h							\
	xfce-miscutils.h						\
	xfce-rc.h							\
	$(util_headers)

libxfce4util_la_SOURCES =						\
	debug.h								\
	i18n.c								\
	i18n.h								\
	licenses-texts.c						\
	utf8.c								\
	utf8.h								\
	xfce-desktopentry.c						\
	xfce-desktopentry.h						\
	xfce-fileutils.c						\
	xfce-fileutils.h						\
	xfce-generics.h							\
	xfce-kiosk.c							\
	xfce-kiosk.h							\
	xfce-miscutils.c						\
	xfce-miscutils.h						\
	xfce-rc.c							\
	xfce-rc.h							\
	xfce-rc-config.c						\
	xfce-rc-private.h						\
	xfce-rc-simple.c						\
	xfce-resource.c							\
	xfce-resource.h							\
	$(util_built_sources)

##
## Rules to auto-generate built sources
##
## This is a bit tricky with automake, and non-trivial to implement. The
## rules below seem to work fine and don't seem to break the build, but
## they are only enabled in maintainer mode, so arbitrary users don't get
## trapped in automake's oddities. Therefore we ship the autogenerated
## files as part of the dist tarball.
##
if MAINTAINER_MODE
CLEANFILES =								\
	xgen-utilc							\
	xgen-utilh

DISTCLEANFILES =							\
	stamp-util-enum-types.h						\
	$(util_built_sources)

BUILT_SOURCES =								\
	$(util_built_sources)

util-enum-types.h: stamp-util-enum-types.h
	@true
stamp-util-enum-types.h: $(util_headers) Makefile
	( cd $(srcdir) && glib-mkenums \
		--fhead "#ifndef __XFCE_UTIL_ENUM_TYPES_H__\n#define __XFCE_UTIL_ENUM_TYPES_H__\n" \
		--fprod "/* enumerations from \"@filename@\" */\n" \
		--vhead "GType @enum_name@_get_type (void);\n#define UTIL_TYPE_@ENUMSHORT@ (@enum_name@_get_type())\n" \
		--ftail "#endif /* __XFCE_UTIL_ENUM_TYPES_H__ */" \
		$(util_headers) ) > xgen-utilh \
	&& (cmp -s xgen-utilh util-enum-types.h || cp xgen-utilh util-enum-types.h) \
	&& rm -f xgen-utilh \
	&& echo timestamp > $(@F)

util-enum-types.c: $(util_headers) Makefile
	( cd $(srcdir) && glib-mkenums \
		--fhead "#include <libxfce4util/libxfce4util.h>\n" \
		--fprod "\n/* enumerations from \"@filename@\" */" \
		--vhead "GType\n@enum_name@_get_type (void)\n{\n  static GType etype = 0;\n  if (etype == 0) {\n    static const G@Type@Value values[] = {" \
		--vprod "      { @VALUENAME@, \"@VALUENAME@\", \"@valuenick@\" }," \
		--vtail "      { 0, NULL, NULL }\n    };\n    etype = g_@type@_register_static (\"@EnumName@\", values);\n  }\n  return etype;\n}\n" \
		$(util_headers) ) >> xgen-utilc \
	&& cp xgen-utilc util-enum-types.c \
	&& rm -f xgen-utilc
endif


libxfce4util_la_LDFLAGS =					\
	-export-dynamic						\
	-version-info @LIBXFCE4UTIL_VERINFO@			\
	-export-symbols-regex "^[^_].*"

if HAVE_CYGWIN
libxfce4util_la_LDFLAGS += -no-undefined
endif

libxfce4util_la_LIBADD =					\
	@GOBJECT_LIBS@

libxfce4util_la_CFLAGS = 					\
	-I$(top_srcdir)						\
	@GOBJECT_CFLAGS@

pkgconfigdir = $(libdir)/pkgconfig
pkgconfig_DATA = libxfce4util-1.0.pc

licenses-texts.c: licenses-to-c.sh BSD GPL LGPL
	sh licenses-to-c.sh BSD:BSD GPL:GPL LGPL:LGPL > $@

# required for gtk-doc
dist-hook: all

EXTRA_DIST =							\
	BSD							\
	GPL							\
	LGPL							\
	libxfce4util-config.h.in				\
	licenses-to-c.sh
